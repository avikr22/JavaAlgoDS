class Scheduler {
    List<Room> rooms = new ArrayList<>();
    
    //constructor
    Scheduler (List<rooms> rooms) {
         this.rooms = rooms;
    }
       
    
    private String book (Date start, Date end) {
        for (Room room : rooms) {
            Meeting meeting = r.book(start, end);
            if (meeting != null) {
                room.deque(meeting);
                return room.name;
            }
        }
        return "No room is available for this timeslot";
    } 
}

class Room {
    String Name = "";
    Calendar cal = null;
    List<Meeting> meetings = new ArrayList<>();
    
    //constructor
    Room (String name) {
        this.name = name;
        this.cal = new Calendar(this);
    }
    
    private Meeting book (Date start, Date end) {
        Meeting meeting = this.cal.book(start, end);
        if (meeting != null) {
            meetings.add(meeting);
        }
        return meeting;
    }
    
    private boolean isAvailable (Date start, Date end) {
        for (Meeting meeting : meetings) {
			if (meeting.end > start || meeting.start < end)
				return false;
		}
		return true;
	}
    
    
    private void deque(Meeting meeting) {
        Meeting last = meetings.get(meetings.size() - 1); 
        for (int i = 0; i < meetings.size(); i++) {
            if (meetings.get(i) == meeting) {
                meetings.set(i, last);
                meetings.set(meetings.size() - 1, null);
            }
        }
    }
    
}

class Calendar {
    Room room = null;
    
    
    //constructor
    Calendar (Room room) {
        this.room = room;
    }
    
    private Meeting book (Date start, Date end) {
        if (room.isAvailable (start, end)) {
            Meeting m = new Meeting (start, end, room);
            return m;
        }
        return null;
    }
}

class Meeting {
    String id = "";
    Room room = null;
    Date start = null;
    Date end = null;
    Meeting (Date start, Date end, Room room) {
        this.id = UUID.generate();
        this.start = start;
        this.end = end;
        this.room = room;
    }
}
